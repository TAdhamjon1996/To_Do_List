[{"C:\\Users\\ionic-angular\\task\\src\\index.js":"1","C:\\Users\\ionic-angular\\task\\src\\reportWebVitals.js":"2","C:\\Users\\ionic-angular\\task\\src\\App.js":"3","C:\\Users\\ionic-angular\\task\\src\\components\\FilterButton.js":"4","C:\\Users\\ionic-angular\\task\\src\\components\\Form.js":"5","C:\\Users\\ionic-angular\\task\\src\\components\\Todo.js":"6"},{"size":644,"mtime":1612180659971,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1612157846707,"results":"9","hashOfConfig":"8"},{"size":2734,"mtime":1612207528639,"results":"10","hashOfConfig":"8"},{"size":492,"mtime":1612202575284,"results":"11","hashOfConfig":"8"},{"size":940,"mtime":1612203783166,"results":"12","hashOfConfig":"8"},{"size":3307,"mtime":1612211649981,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"w282a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\ionic-angular\\task\\src\\index.js",[],["29","30"],"C:\\Users\\ionic-angular\\task\\src\\reportWebVitals.js",[],"C:\\Users\\ionic-angular\\task\\src\\App.js",["31"],"import React, {useEffect, useRef, useState} from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n  \n\nfunction  App(props) {\n  function addTask(name){\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  const [tasks, setTasks] = useState(props.tasks);\n  \n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName}\n      } \n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  const [filter, setFilter] = useState('All');\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n  ));\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  \n  \n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n    key={name} \n    name={name}\n    isPressed={name === filter}\n    setFilter={setFilter}\n  />\n  ));\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]); \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask = {addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ionic-angular\\task\\src\\components\\FilterButton.js",[],"C:\\Users\\ionic-angular\\task\\src\\components\\Form.js",[],["32","33"],"C:\\Users\\ionic-angular\\task\\src\\components\\Todo.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":98,"column":7,"nodeType":"40","endLine":102,"endColumn":8},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["43"],["44"],"no-global-assign","no-unsafe-negation"]